# -*- coding: utf-8 -*-
"""Amazon Sales Analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tpxj_GPX3WZSZPmWYGfMBHhglJmWxSPJ

**The most important libraries that we will need**
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import datetime
import re

"""**Read Data**"""

Sales_January = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_January_2019.csv')
Sales_February = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_February_2019.csv')
Sales_March = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_March_2019.csv')
Sales_April = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_April_2019.csv')
Sales_May = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_May_2019.csv')
Sales_June = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_June_2019.csv')
Sales_July = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_July_2019.csv')
Sales_August = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_August_2019.csv')
Sales_September = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_September_2019.csv')
Sales_October = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_October_2019.csv')
Sales_November = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_November_2019.csv')
Sales_December = pd.read_csv(r'https://raw.githubusercontent.com/KeithGalli/Pandas-Data-Science-Tasks/master/SalesAnalysis/Sales_Data/Sales_December_2019.csv')

"""**Merge files**"""

All_Data = pd.concat([Sales_January, Sales_February,Sales_March,Sales_April,Sales_May,Sales_June,Sales_July,Sales_August
                      ,Sales_September,Sales_October,Sales_November,Sales_December])
All_Data.index = range(0,186850)
All_Data.to_excel('Sales_2019.xlsx')
print(All_Data)

"""# **Validation And Prepartion**

**Ensure there are no Duplicated Rows**
"""

print(All_Data.duplicated().value_counts())

"""**Drop Duplicated Rows**"""

All_Data.drop_duplicates(inplace=True)
print((All_Data.duplicated().value_counts()))

"""**Ensure there are no missing values**"""

All_Data[All_Data.isna().any(axis=1)]

"""**Drop Rows have missing values**"""

All_Data.dropna(axis=0,inplace=True)

"""**Ensure there are no missing values**"""

All_Data = All_Data[All_Data['Order ID']!='Order ID']
All_Data[All_Data.isna().any(axis=1)]

print(All_Data)

"""**Covert each column to suitable data type**"""

All_Data['Order ID'] = pd.to_numeric(All_Data['Order ID'])
All_Data['Order Date'] = pd.to_datetime(All_Data['Order Date'])
All_Data['Quantity Ordered'] = pd.to_numeric(All_Data['Quantity Ordered'])
All_Data['Price Each'] = pd.to_numeric(All_Data['Price Each'])

"""**ADD Column Sales by multiply Quantity Ordered and Price Each**"""

All_Data['sales'] = All_Data['Quantity Ordered'] * All_Data['Price Each']
print(All_Data)

"""**ADD Columns time, Day, month**"""

All_Data['hour'] = All_Data['Order Date'].dt.hour
All_Data['Day'] = All_Data['Order Date'].dt.day
All_Data['Month'] = All_Data['Order Date'].dt.month
print(All_Data)

"""**Drop Order Date column**"""

All_Data.drop(labels='Order Date',axis=1,inplace=True)

"""**ADD City Column**"""

All_Data['City'] = All_Data['Purchase Address'].apply(lambda x: x.split(',')[1])

print(All_Data)

"""# Analysis

**What was the best month for sales? How much was earned that month?**
"""

plt.plot((All_Data.groupby('Month').sum()['sales']).index,(All_Data.groupby('Month').sum()['sales']).values,marker='o')
plt.xlabel('Month')
plt.ylabel('sales by millions')

"""**What city sold the most product?**"""

plt.barh(All_Data.groupby('City').sum()['Quantity Ordered'].index , All_Data.groupby('City').sum()['Quantity Ordered'].values)
plt.xlabel('Piece')
plt.ylabel('City')

"""**What city sold the most Sales?**"""

plt.barh(All_Data.groupby('City').sum()['sales'].index , All_Data.groupby('City').sum()['sales'].values)
plt.xlabel('Sales by milions')
plt.ylabel('City')

"""**What time should we display advertisemens to maximize the likelihood of customerâ€™s buying product?**

"""

plt.bar(All_Data['hour'].value_counts().index, All_Data['hour'].value_counts().values)
plt.xlabel('time')
plt.ylabel('number of orders')
# from 10 am to 8 pm, this is suitable time